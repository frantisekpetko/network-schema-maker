{"version":3,"sources":["EditorRoot/components/DrawerProposal.js","EditorRoot/EditorRoot.js","Preloader.js","App.js","serviceWorker.js","index.js"],"names":["DrawerProposal","state","searchString","onSearchInputChange","event","target","value","_this","setState","react_default","a","createElement","className","Drawer_default","variant","anchor","open","this","props","attrOpen","classes","paper","IconButton_default","onClick","methClose","ChevronLeft_default","ChevronRight_default","Divider_default","Paper_default","InputBase_default","placeholder","aria-label","Search_default","data","drawerItems","map","menu","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","name","ExpansionPanelDetails_default","List_default","list","item","ListItem_default","button","component","ListItemText_default","primary","React","Component","EditorRoot","handleReloadPage","window","location","reload","handleDrawerOpen","handleDrawerClose","AppBar_default","position","Toolbar_default","Grid_default","color","Menu_default","Button_default","components_DrawerProposal","Preloader","href","rel","App","loading","_this2","setInterval","src_Preloader","src_EditorRoot_EditorRoot","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gnBAoGeA,8MAnEXC,MAAQ,CACJC,aAAc,MAGlBC,oBAAsB,SAACC,GACfA,EAAMC,OAAOC,MACbC,EAAKC,SAAS,CAACN,aAAcE,EAAMC,OAAOC,QAE1CC,EAAKC,SAAS,CAACN,aAAc,8EAQjC,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACIE,UAAU,SACVE,QAAQ,aACRC,OAAO,OACPC,KAAMC,KAAKC,MAAMC,SACjBC,QAAS,CACLC,MAAO,iBAGXZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYa,QAASN,KAAKC,MAAMM,WAC3BP,KAAKC,MAAMC,SAAWV,EAAAC,EAAAC,cAACc,EAAAf,EAAD,MAAsBD,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,QAGrDD,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,MACAD,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAOE,UAAU,eACbH,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAWE,UAAU,QAAQkB,YAAY,sBACzCrB,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYE,UAAU,cAAcmB,aAAW,UAC3CtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,OAEJD,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAASE,UAAU,aAGtBqB,GAAKC,YAAYC,IAAI,SAACC,GAAD,OAClB3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAgBE,UAAU,aACtBH,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAuB6B,WAAY9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAYE,UAAU,WAAWwB,EAAKM,OAE1CjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACID,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,KAEQ0B,EAAKS,KAAKV,IAAI,SAACW,GAAD,OACVrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUsC,QAAM,EAACC,UAAU,KACvBxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAcyC,QAASL,qBArD1CM,IAAMC,WCmDpBC,8MArEXrD,MAAQ,CACJe,MAAM,KAGVuC,iBAAmB,WACfC,OAAOC,SAASC,YAGpBC,iBAAmB,WACfpD,EAAKC,SAAS,CAAEQ,MAAM,OAG1B4C,kBAAoB,WAChBrD,EAAKC,SAAS,CAAEQ,MAAM,6EAKtB,OAAOP,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAAQoD,SAAS,SAASlD,UAAWK,KAAKhB,MAAMe,KAAO,qBAAuB,IAC1EP,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,KACID,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAWK,KAAKhB,MAAMe,KAAO,iBAAmB,aAAeO,QAASN,KAAK0C,kBAC/ElD,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAYuD,MAAM,UAAUlC,aAAW,QACnCtB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,QAGRD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQI,QAAQ,YACRmD,MAAM,YACN1C,QAASN,KAAKsC,kBAFtB,yBAOJ9C,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,SAEJxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,UAEJxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,SAEJxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,QAEJxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBAChBH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,SAEAxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,SAEJxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,SAEJxD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAME,UAAU,mBACZH,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,CAAQuD,MAAM,WAAd,aAIZxD,EAAAC,EAAAC,cAACyD,GAAD,CAAgB5C,UAAWP,KAAK2C,kBAAmBzC,SAAUF,KAAKhB,MAAMe,eA9D3DoC,IAAMC,WCuBhBgB,GAhCG,kBAEd5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa,gBAGhCH,EAAAC,EAAAC,cAAA,iCAGAF,EAAAC,EAAAC,cAAA,KACIC,UAAU,WACV0D,KAAK,sBACLjE,OAAO,SACPkE,IAAI,uBAJR,uBAQA9D,EAAAC,EAAAC,cAAA,KACIC,UAAU,aACV0D,KAAK,6CACLjE,OAAO,SACPkE,IAAI,uBAJR,uCCSGC,sNAtBbvE,MAAQ,CACNwE,SAAS,sFAIS,IAAAC,EAAAzD,KAClB0D,YAAa,WACXD,EAAKlE,SAAS,CAACiE,SAAS,KACxB,uCAGK,IACAA,EAAWxD,KAAKhB,MAAhBwE,QAEP,OACEhE,EAAAC,EAAAC,cAAA,WACG8D,EAAUhE,EAAAC,EAAAC,cAACiE,GAAD,MAAenE,EAAAC,EAAAC,cAACkE,GAAD,cAlBhBxB,cCMEyB,QACW,cAA7BtB,OAAOC,SAASsB,UAEe,UAA7BvB,OAAOC,SAASsB,UAEhBvB,OAAOC,SAASsB,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f817cd2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import Grid from '@material-ui/core/Grid';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport \"./Drawer.css\";\r\nimport data from \"../data.json\";\r\n\r\n/*\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n*/\r\n\r\n\r\n\r\nclass DrawerProposal extends React.Component {\r\n\r\n    state = {\r\n        searchString: \"\"\r\n    };\r\n\r\n    onSearchInputChange = (event) => {\r\n        if (event.target.value) {\r\n            this.setState({searchString: event.target.value})\r\n        } else {\r\n            this.setState({searchString: ''})\r\n        }\r\n        //this.getCourses()\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"root\">\r\n                <Drawer\r\n                    className=\"drawer\"\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={this.props.attrOpen}\r\n                    classes={{\r\n                        paper: \"drawer-paper\",\r\n                    }}\r\n                >\r\n                    <div className=\"drawer-header\">\r\n                        <IconButton onClick={this.props.methClose}>\r\n                            {this.props.attrOpen ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <Paper className=\"search-root\">\r\n                        <InputBase className=\"input\" placeholder=\"Search components\" />\r\n                        <IconButton className=\"icon-button\" aria-label=\"Search\">\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                        <Divider className=\"divider\" />\r\n                    </Paper>\r\n\r\n                    {data.drawerItems.map((menu) => (\r\n                        <ExpansionPanel className=\"exp-width\">\r\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography className=\"heading\">{menu.name}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <List>\r\n                                    {\r\n                                        menu.list.map((item) => (\r\n                                            <ListItem button component=\"a\">\r\n                                                <ListItemText primary={item} />\r\n                                            </ListItem>\r\n                                        ))\r\n                                    }\r\n                                </List>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    ))}\r\n\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DrawerProposal;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DrawerProposal from './components/DrawerProposal';\r\n\r\n\r\n\r\nclass EditorRoot extends React.Component {\r\n\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleReloadPage = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <AppBar position=\"static\" className={this.state.open ? \"header-space-right\" : \"\"}>\r\n                <Toolbar>\r\n                    <Grid className={this.state.open ? \"icon-dissapear\" : \"left-align\" } onClick={this.handleDrawerOpen} >\r\n                        <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={this.handleReloadPage}\r\n                        >Network scheme maker</Button>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Save</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Paste</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Copy</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Cut</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                    <Button color=\"inherit\">Undo</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Text</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Line</Button>\r\n                    </Grid>\r\n                    <Grid className=\"btn-right-space\" >\r\n                        <Button color=\"inherit\">Export</Button>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <DrawerProposal methClose={this.handleDrawerClose} attrOpen={this.state.open}/>\r\n        </div>\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default EditorRoot;","import React from 'react';\r\n\r\nconst Preloader = () => (\r\n\r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <div className=\"App-logo\">\r\n                <div className=\"App-image\">{\"           \"}</div>\r\n            </div>\r\n\r\n            <p>\r\n                Network schema maker\r\n            </p>\r\n            <a\r\n                className=\"App-link\"\r\n                href=\"https://reactjs.org\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                Powered by React.JS\r\n            </a>\r\n            <a\r\n                className=\"App-author\"\r\n                href=\"https://www.facebook.com/frantisek.petko.7\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                Programmer: František Petko\r\n            </a>\r\n        </header>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Preloader;","import React, { Component } from 'react';\nimport EditorRoot from './EditorRoot/EditorRoot';\nimport Preloader from './Preloader';\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    loading: true,\n\n  };\n\n  componentDidMount() {\n    setInterval( () => {\n      this.setState({loading: false});\n    },1500)\n  }\n\n  render() {\n    const {loading} = this.state;\n\n    return (\n      <div>\n        {loading ? <Preloader/> : <EditorRoot/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}